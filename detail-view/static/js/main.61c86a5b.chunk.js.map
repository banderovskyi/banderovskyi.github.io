{"version":3,"sources":["components/Footer/Footer.js","components/Header/SubMenu/SubMenu.js","components/Header/NavigationItem/NavigaionItem.js","components/Header/HeaderNavigation/HeaderNavigation.js","components/Header/HeaderLogo/HeaderLogo.js","components/Header/HeaderLinks/HeaderLinks.js","components/Header/HeaderContacts/HeaderContacts.js","components/Header/SearchButton/SearchButton.js","components/Header/Header.js","components/Aside/Aside.js","components/Slider/SliderItem.js","components/Slider/SliderWrapper.js","components/Slider/Slider.js","App.js","app/appSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["Footer","props","className","SubMenu","submenuItems","map","item","link","title","NavigaionItem","submenu","submenuClassName","index","isSubmenuActive","clickHandler","length","onClick","e","preventDefault","href","icon","faChevronDown","size","HeaderNavigation","useState","isMobileMenuVisible","setIsMobileMenuVisible","changeSubMenuStatuses","prevState","newStatuses","itemIndex","faBars","faTimes","navItems","subMenuStatuses","HeaderLogo","src","alt","HeaderLinks","links","linkItem","HeaderContacts","contacts","contact","includes","faPhone","faEnvelope","SearchButton","faSearch","Header","logoInfo","headerLinks","navItemsNumber","Array","fill","useEffect","Aside","SliderItem","activeImageIndex","style","width","imageSize","SliderWrapper","transform","transformWidth","mainWrapperWidth","children","Slider","images","thumbsCount","setThumbsCount","imagesLength","largeImageSize","smallImageSize","setActiveImageIndex","setMainWrapperWidth","imageNodeWidth","setImageNodeWidth","setTransformWidth","isFullScreenButtonVisible","setIsFullScreenButtonVisible","isFullScreen","setIsFullScreen","$largeWrapper","useRef","initSliderSizes","nodeWidth","current","clientWidth","window","innerWidth","addEventListener","removeEventListener","clickOnThumbHandler","ref","onMouseEnter","onMouseLeave","prevIndex","prevValue","newTransformWidth","faChevronLeft","faChevronRight","faSearchPlus","onS","image","Math","random","App","rootNode","setSubMenuStatuses","target","closest","document","id","appSlice","createSlice","name","initialState","testString","reducers","test","state","action","payload","actions","store","configureStore","reducer","app","appReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61c86a5b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Footer.scss';\n\nconst Footer = (props) => {\n  return <footer className={`footer ${props.className ? props.className : ''}`}>Footer</footer>;\n};\n\nFooter.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Footer;\n","import React from 'react';\nimport './SubMenu.scss';\nimport PropTypes from 'prop-types';\nimport NavigaionItem from '../NavigationItem/NavigaionItem';\n\nconst SubMenu = ({ className, submenuItems }) => {\n  return (\n    <ul className={`submenu ${className ? className : ''}`}>\n      {submenuItems?.map((item) => (\n        <NavigaionItem\n          className={'submenu__item'}\n          link={item.link}\n          title={item.title}\n          key={`${item.link}${item.title}`}\n        />\n      ))}\n    </ul>\n  );\n};\n\nSubMenu.propTypes = {\n  className: PropTypes.string,\n  submenuItems: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default SubMenu;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SubMenu from '../SubMenu/SubMenu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\n\nconst NavigaionItem = ({\n  className,\n  link,\n  title,\n  submenu,\n  submenuClassName,\n  index,\n  isSubmenuActive,\n  clickHandler,\n}) => {\n  const isSubMenuPresent = submenu?.length > 0;\n\n  if (isSubMenuPresent) {\n    const clickOnItem = (e) => {\n      e.preventDefault();\n      clickHandler(index);\n    };\n\n    return (\n      <li className={`${className ? className : ''}`} onClick={clickOnItem}>\n        <a href={link}>\n          {title}\n          <FontAwesomeIcon icon={faChevronDown} size=\"xs\" />\n        </a>\n        <SubMenu\n          submenuItems={submenu}\n          className={`${submenuClassName} ${isSubmenuActive ? 'navigation__sub-menu--active' : ''}`}\n        />\n      </li>\n    );\n  } else {\n    return (\n      <li className={`${className ? className : ''}`}>\n        <a href={link}>{title}</a>\n      </li>\n    );\n  }\n};\n\nNavigaionItem.propTypes = {\n  className: PropTypes.string,\n  link: PropTypes.string,\n  title: PropTypes.string,\n  submenu: PropTypes.arrayOf(PropTypes.object),\n  submenuClassName: PropTypes.string,\n  index: PropTypes.number,\n  isSubmenuActive: PropTypes.bool,\n};\n\nexport default NavigaionItem;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport NavigaionItem from '../NavigationItem/NavigaionItem';\nimport './HeaderNavigation.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst HeaderNavigation = (props) => {\n  const [isMobileMenuVisible, setIsMobileMenuVisible] = useState(false);\n\n  const openMobileMenuHandler = () => {\n    setIsMobileMenuVisible(true);\n  };\n\n  const closeMobileMenuHandler = () => {\n    setIsMobileMenuVisible(false);\n  };\n\n  const clickHandler = (index) => {\n    props.changeSubMenuStatuses((prevState) => {\n      let newStatuses;\n      newStatuses = prevState.map((item, itemIndex) => {\n        return itemIndex === index ? true : false;\n      });\n      if (prevState[index]) {\n        newStatuses = prevState.map((item) => (item = false));\n      }\n      return newStatuses;\n    });\n  };\n\n  return (\n    <div\n      className={`navigation ${props.className ? props.className : ''} ${\n        isMobileMenuVisible ? 'navigation--active' : ''\n      }`}>\n      <button\n        className=\"navigation__mobile-menu-button navigation__mobile-menu-button_open\"\n        onClick={openMobileMenuHandler}>\n        <FontAwesomeIcon icon={faBars} size=\"lg\" />\n      </button>\n      <nav className=\"navigation__wrapper\">\n        <button\n          className=\"navigation__mobile-menu-button navigation__mobile-menu-button_close\"\n          onClick={closeMobileMenuHandler}>\n          <FontAwesomeIcon icon={faTimes} size=\"lg\" />\n        </button>\n        <ul className=\"navigation__list\">\n          {props.navItems?.map((item, index) => (\n            <NavigaionItem\n              className={`navigation__item\n              ${item.submenu ? 'navigation__item--dropdown' : ''}\n              ${props.subMenuStatuses[index] ? 'navigation__item--active' : ''}`}\n              isSubmenuActive={props.subMenuStatuses[index]}\n              link={item.link}\n              title={item.title}\n              key={`${item.link}${item.title}`}\n              submenu={item.submenu}\n              submenuClassName={'navigation__sub-menu'}\n              index={index}\n              clickHandler={clickHandler}\n            />\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nHeaderNavigation.propTypes = {\n  className: PropTypes.string,\n  navItems: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default HeaderNavigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst HeaderLogo = (props) => {\n  return (\n    <a href={props.link ? props.link : '/'} className={`logo ${props.className ? props.className : ''}`}>\n      <img src={props.src} alt={props.alt ? props.alt : 'Company logo'} />\n    </a>\n  );\n};\n\nHeaderLogo.propTypes = {\n  className: PropTypes.string,\n  link: PropTypes.string,\n  src: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default HeaderLogo;\n","import React from 'react';\nimport './HeaderLinks.scss';\nimport PropTypes from 'prop-types';\n\nconst HeaderLinks = (props) => {\n  return (\n    <div className={`header-links ${props.className ? props.className : ''}`}>\n      <ul className=\"header-links__list\">\n        {props.links?.map((linkItem) => (\n          <li className=\"header-links__item\" key={`${linkItem.link}${linkItem.title}`}>\n            <a href={linkItem.link}>{linkItem.title}</a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nHeaderLinks.propTypes = {\n  className: PropTypes.string,\n  links: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default HeaderLinks;\n","import React from 'react';\nimport './HeaderContacts.scss';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faPhone } from '@fortawesome/free-solid-svg-icons';\n\nconst HeaderContacts = (props) => {\n  return (\n    <div className={`header-contacts ${props.className ? props.className : ''}`}>\n      <ul className=\"header-contacts__list\">\n        {props.contacts?.map((contact) => (\n          <li className=\"header-contacts__item\" key={`${contact.link}${contact.title}`}>\n            <a href={contact.link}>\n              {contact.link.includes('tel:') && <FontAwesomeIcon icon={faPhone} />}\n              {contact.link.includes('mailto:') && <FontAwesomeIcon icon={faEnvelope} />}\n              <span>{contact.title}</span>\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nHeaderContacts.propTypes = {\n  className: PropTypes.string,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default HeaderContacts;\n","import React from 'react';\nimport './SearchButton.scss';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nconst SearchButton = (props) => {\n  return (\n    <a href={props.link} className={`search-button ${props.className ? props.className : ''}`}>\n      <span>{props.title ? props.title : 'Search'}</span>\n      <FontAwesomeIcon icon={faSearch} />\n    </a>\n  );\n};\n\nSearchButton.propTypes = {\n  className: PropTypes.string,\n  link: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default SearchButton;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Header.scss';\nimport HeaderNavigation from './HeaderNavigation/HeaderNavigation';\nimport HeaderLogo from './HeaderLogo/HeaderLogo';\nimport HeaderLinks from './HeaderLinks/HeaderLinks';\nimport HeaderContacts from './HeaderContacts/HeaderContacts';\nimport SearchButton from './SearchButton/SearchButton';\n\nconst Header = (props) => {\n  const [navItems] = useState([\n    {\n      link: '#',\n      title: 'Sales',\n\n      submenu: [\n        {\n          link: '/sellers/link/',\n          title: 'Western Suburbs',\n        },\n        { link: '/sellers/link/', title: 'North Shore' },\n        { link: '/sellers/link/', title: 'South Shore' },\n        {\n          link: '/sellers/link/',\n          title: 'Cape Cod & Islands',\n        },\n        {\n          link: '/sellers/link/',\n          title: 'Off Market Listings',\n        },\n      ],\n    },\n    {\n      link: '#',\n      title: 'Rentals',\n\n      submenu: [\n        {\n          link: '/sellers/link/',\n          title: 'Western Suburbs',\n        },\n        { link: '/sellers/link/', title: 'North Shore' },\n        { link: '/sellers/link/', title: 'South Shore' },\n        {\n          link: '/sellers/link/',\n          title: 'Cape Cod & Islands',\n        },\n        {\n          link: '/sellers/link/',\n          title: 'Off Market Listings',\n        },\n      ],\n    },\n    { link: '/', title: 'Quick search' },\n    { link: '/', title: 'Neighborhoods' },\n    {\n      link: '/',\n      title: 'About',\n\n      submenu: [\n        { link: '/sellers/link/', title: 'Team' },\n        { link: '/sellers/link/', title: 'Contact' },\n      ],\n    },\n  ]);\n  const [logoInfo] = useState({\n    link: '/',\n    src: 'https://s3.amazonaws.com/files.usmre.com/8844/usm-logo-blue.svg',\n    alt: 'Logo',\n  });\n  const [headerLinks] = useState([\n    { title: 'My Favorites', link: '/listings/favorite/' },\n    { title: 'Contact', link: '/contact-us/' },\n    { title: 'Log In', link: '#' },\n    { title: 'Sign Up', link: '#' },\n  ]);\n  const [contacts] = useState([{ title: '132-132-1324', link: 'tel:1321321324' }]);\n  const navItemsNumber = navItems.length ? navItems.length : 0;\n  const subMenuStatuses = new Array(navItemsNumber).fill(false);\n\n  useEffect(() => {\n    props.changeSubMenuStatuses(subMenuStatuses);\n  }, []);\n\n  return (\n    <header className={`header ${props.className ? props.className : ''}`}>\n      <div className=\"container\">\n        <div className=\"header__part header__part--left\">\n          <HeaderNavigation\n            className=\"header__navigation\"\n            navItems={navItems}\n            subMenuStatuses={props.subMenuStatuses}\n            changeSubMenuStatuses={props.changeSubMenuStatuses}\n          />\n        </div>\n        <HeaderLogo className=\"header__logo\" {...logoInfo} />\n        <div className=\"header__part header__part--right\">\n          <HeaderLinks className=\"header__links\" links={headerLinks} />\n          <HeaderContacts className=\"header__contacts\" contacts={contacts} />\n          <SearchButton className=\"header__search-button\" link=\"/listings/\" title=\"Search\" />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  subMenuStatuses: PropTypes.array,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Aside = (props) => {\n  return (\n    <aside className={`aside ${props.className ? props.className : ''}`}>\n      Aside comming soon...\n    </aside>\n  );\n};\n\nAside.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Aside;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SliderItem = (props) => {\n  return (\n    <div\n      className={`slider__item ${\n        props.itemIndex === props.activeImageIndex ? 'slider__item--active' : ''\n      }`}\n      onClick={() => props.clickHandler && props.clickHandler(props.itemIndex)}\n      style={{ width: props.width }}>\n      <img src={`${props.src}${props.imageSize}.jpeg`} alt={props.alt} />\n    </div>\n  );\n};\n\nSliderItem.propTypes = {\n  itemIndex: PropTypes.number,\n  activeImageIndex: PropTypes.number,\n  src: PropTypes.string,\n  imageSize: PropTypes.string,\n  width: PropTypes.number,\n};\n\nexport default SliderItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SliderWrapper = (props) => {\n  return (\n    <div className=\"slider__wrapper-outer\">\n      <div\n        className=\"slider__wrapper\"\n        style={{\n          transform: `translateX(-${props.transformWidth}px)`,\n          width: props.mainWrapperWidth,\n        }}>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nSliderWrapper.propTypes = {\n  transformWidth: PropTypes.number,\n  mainWrapperWidth: PropTypes.number,\n};\n\nexport default SliderWrapper;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Slider.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faSearchPlus,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons';\nimport SliderItem from './SliderItem';\nimport SliderWrapper from './SliderWrapper';\n\nconst Slider = (props) => {\n  const [images] = useState([\n    { src: 'images/image-1', alt: 'Property image' },\n    { src: 'images/image-2', alt: 'Property image' },\n    { src: 'images/image-3', alt: 'Property image' },\n    { src: 'images/image-4', alt: 'Property image' },\n    { src: 'images/image-5', alt: 'Property image' },\n    { src: 'images/image-6', alt: 'Property image' },\n    { src: 'images/image-7', alt: 'Property image' },\n    { src: 'images/image-8', alt: 'Property image' },\n    { src: 'images/image-9', alt: 'Property image' },\n    { src: 'images/image-10', alt: 'Property image' },\n    { src: 'images/image-11', alt: 'Property image' },\n  ]);\n  const mobileBreakpoint = 768;\n\n  const thumbsOnDesktop = 7;\n  const thumbsOnMobile = 3;\n  const thumbsOnFullScreen = 10;\n  const [thumbsCount, setThumbsCount] = useState(thumbsOnDesktop);\n\n  const [imagesLength] = useState(images.length);\n\n  const [largeImageSize] = useState('-h=900w=1200');\n  const [smallImageSize] = useState('-h=480w=640');\n\n  const [activeImageIndex, setActiveImageIndex] = useState(0);\n  const [mainWrapperWidth, setMainWrapperWidth] = useState(0);\n  const [imageNodeWidth, setImageNodeWidth] = useState(0);\n  const [transformWidth, setTransformWidth] = useState(0);\n\n  const [isFullScreenButtonVisible, setIsFullScreenButtonVisible] = useState(false);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  const $largeWrapper = useRef(null);\n\n  const initSliderSizes = () => {\n    const nodeWidth = $largeWrapper.current.clientWidth;\n    setImageNodeWidth(nodeWidth);\n    setMainWrapperWidth(nodeWidth * imagesLength);\n    setTransformWidth(nodeWidth * activeImageIndex);\n    if (window.innerWidth < mobileBreakpoint) {\n      setThumbsCount(thumbsOnMobile);\n    } else if (!isFullScreen) {\n      setThumbsCount(thumbsOnDesktop);\n    }\n  };\n\n  useEffect(() => {\n    initSliderSizes();\n    window.addEventListener('resize', () => {\n      initSliderSizes();\n    });\n    return () => {\n      window.removeEventListener('resize', initSliderSizes);\n    };\n  }, [activeImageIndex]);\n\n  const nextClickHandler = () => {\n    setActiveImageIndex((prevIndex) => {\n      if (prevIndex >= imagesLength - 1) {\n        return 0;\n      }\n      return prevIndex + 1;\n    });\n    setTransformWidth((prevValue) => {\n      const newTransformWidth = prevValue + imageNodeWidth;\n      if (newTransformWidth >= mainWrapperWidth) {\n        return 0;\n      }\n      return newTransformWidth;\n    });\n  };\n\n  const prevClickHandler = () => {\n    setActiveImageIndex((prevIndex) => {\n      if (prevIndex <= 0) {\n        return imagesLength - 1;\n      }\n      return prevIndex - 1;\n    });\n    setTransformWidth((prevValue) => {\n      const newTransformWidth = prevValue - imageNodeWidth;\n      if (newTransformWidth < 0) {\n        return mainWrapperWidth - imageNodeWidth;\n      }\n      return newTransformWidth;\n    });\n  };\n\n  const clickOnThumbHandler = (index) => {\n    setActiveImageIndex(index);\n  };\n\n  const enableFullScreen = () => {\n    setIsFullScreen(true);\n    setThumbsCount(thumbsOnFullScreen);\n  };\n\n  const disableFullScreen = () => {\n    setIsFullScreen(false);\n    setThumbsCount(thumbsOnDesktop);\n  };\n\n  useEffect(() => {\n    initSliderSizes();\n  }, [isFullScreen]);\n\n  return (\n    <div\n      className={`slider ${isFullScreen ? 'slider--full-screen' : ''} ${\n        props.className ? props.className : ''\n      } `}\n      ref={$largeWrapper}\n      onMouseEnter={() => setIsFullScreenButtonVisible(true)}\n      onMouseLeave={() => setIsFullScreenButtonVisible(false)}>\n      <div className=\"slider__main\">\n        <div className=\"slider__buttons\">\n          <button onClick={prevClickHandler} className=\"slider__button slider__button--prev\">\n            <FontAwesomeIcon icon={faChevronLeft} size=\"4x\" />\n          </button>\n          <button onClick={nextClickHandler} className=\"slider__button slider__button--next\">\n            <FontAwesomeIcon icon={faChevronRight} size=\"4x\" />\n          </button>\n          <button\n            onClick={enableFullScreen}\n            className={`slider__button slider__button--full-screen ${\n              !isFullScreen && isFullScreenButtonVisible\n                ? 'slider__button--full-screen--active'\n                : ''\n            }`}>\n            <FontAwesomeIcon icon={faSearchPlus} size=\"2x\" />\n          </button>\n          {isFullScreen && (\n            <button\n              onClick={disableFullScreen}\n              className=\"slider__button slider__button--disable-full-screen\">\n              <FontAwesomeIcon icon={faTimes} size=\"3x\" />\n            </button>\n          )}\n        </div>\n        <SliderWrapper mainWrapperWidth={mainWrapperWidth} transformWidth={transformWidth} onS>\n          {images.map((image, index) => (\n            <SliderItem\n              src={image.src}\n              imageSize={largeImageSize}\n              width={imageNodeWidth}\n              itemIndex={index}\n              activeImageIndex={activeImageIndex}\n              key={Math.random()}\n            />\n          ))}\n        </SliderWrapper>\n      </div>\n      <div className=\"slider__thumbs\">\n        <SliderWrapper\n          mainWrapperWidth={mainWrapperWidth / thumbsCount}\n          transformWidth={\n            activeImageIndex < imagesLength - thumbsCount\n              ? transformWidth / thumbsCount\n              : mainWrapperWidth / thumbsCount - imageNodeWidth\n          }>\n          {images.map((image, index) => (\n            <SliderItem\n              src={image.src}\n              imageSize={smallImageSize}\n              width={imageNodeWidth / thumbsCount}\n              itemIndex={index}\n              activeImageIndex={activeImageIndex}\n              key={Math.random()}\n              clickHandler={clickOnThumbHandler}\n            />\n          ))}\n        </SliderWrapper>\n      </div>\n    </div>\n  );\n};\n\nSlider.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Slider;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useRef, useState } from 'react';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport './App.scss';\nimport Aside from './components/Aside/Aside';\nimport Slider from './components/Slider/Slider';\n\nfunction App() {\n  const rootNode = useRef(null);\n  const navigationSelecor = '.navigation__item';\n  const [subMenuStatuses, setSubMenuStatuses] = useState([]);\n\n  useEffect(() => {\n    const onClick = (e) => {\n      const clickedNavigationItem = e.target.closest(navigationSelecor);\n      if (!clickedNavigationItem) {\n        setSubMenuStatuses((prevState) => {\n          return prevState.map((item) => (item = false));\n        });\n      }\n    };\n    document.addEventListener('click', onClick);\n    return () => document.removeEventListener('click', onClick);\n  }, []);\n\n  return (\n    <div className=\"wrapper\" id=\"App\" ref={rootNode}>\n      <div className=\"content \">\n        <Header changeSubMenuStatuses={setSubMenuStatuses} subMenuStatuses={subMenuStatuses} />\n        <div className=\"page-wrapper\">\n          <div className=\"container\">\n            <main className=\"main page-wrapper__main\">\n              <Slider />\n            </main>\n            <Aside className=\"page-wrapper__aside\" />\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  testString: 'test',\n};\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    test: (state, action) => {\n      state.testString = action.payload;\n    },\n  },\n});\n\nexport const { test } = appSlice.actions;\n\nexport default appSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport appReducer from './appSlice';\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}