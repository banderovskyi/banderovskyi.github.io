{"version":3,"sources":["components/Footer/Footer.js","components/Header/SubMenu/SubMenu.js","components/Header/NavigationItem/NavigaionItem.js","components/Header/HeaderNavigation/HeaderNavigation.js","components/Header/HeaderLogo/HeaderLogo.js","components/Header/HeaderLinks/HeaderLinks.js","components/Header/HeaderContacts/HeaderContacts.js","components/Header/SearchButton/SearchButton.js","components/Header/Header.js","components/UI/Button/Button.js","components/Modal/ModalSlice.js","components/Toolbar/Toolbar.js","components/InfoCallout/IconListItem.js","components/InfoCallout/InfoCallout.js","components/ListingTitle/ListingTitle.js","components/UI/DescriptionCard/DescriptionCard.js","components/ListingDetail/ListingDetail.js","components/UI/Tab/Tab.js","components/ListingTabs/listingTabsObject.js","components/ListingTabs/ListingTabCallout.js","components/ListingTabs/ListingTabs.js","components/Aside/Aside.js","components/Slider/SliderItem.js","components/Slider/SliderWrapper.js","components/Slider/Slider.js","components/Modal/Modal.js","helpers/helpers.js","App.js","app/appSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["Footer","props","className","SubMenu","submenuItems","map","item","link","title","NavigaionItem","submenu","submenuClassName","index","isSubmenuActive","clickHandler","length","onClick","e","preventDefault","href","icon","faChevronDown","size","HeaderNavigation","useState","isMobileMenuVisible","setIsMobileMenuVisible","changeSubMenuStatuses","prevState","newStatuses","itemIndex","faBars","faTimes","navItems","subMenuStatuses","HeaderLogo","src","alt","HeaderLinks","links","linkItem","HeaderContacts","contacts","contact","includes","faPhone","faEnvelope","SearchButton","faSearch","Header","logoInfo","headerLinks","navItemsNumber","Array","fill","useEffect","Button","isSecondary","text","initialState","isLoginModalVisible","isContactModalVisible","modalsSlice","createSlice","name","reducers","closeModal","state","openLoginModal","openContactModal","actions","Toolbar","dispatch","useDispatch","faHeart","IconListItem","value","InfoCallout","price","beds","baths","acres","sqft","status","listingInfo","faBed","faBath","faRulerCombined","faBorderAll","ListingTitle","address","town","zipCode","titleProperties","DescriptionCard","description","ListingDetail","Tab","isActive","setIsActive","faChevronRight","children","tabsInfo","groupFields","subTitle","fields","ListingTabCallout","items","Math","random","ListingTabs","tabsInfoObj","console","log","tab","i","field","Aside","SliderItem","activeImageIndex","style","width","imageSize","SliderWrapper","transform","transformWidth","mainWrapperWidth","Slider","images","thumbsCount","setThumbsCount","imagesLength","largeImageSize","smallImageSize","setActiveImageIndex","setMainWrapperWidth","imageNodeWidth","setImageNodeWidth","setTransformWidth","isFullScreenButtonVisible","setIsFullScreenButtonVisible","isFullScreen","setIsFullScreen","$largeWrapper","useRef","initSliderSizes","nodeWidth","current","clientWidth","window","innerWidth","addEventListener","removeEventListener","clickOnThumbHandler","ref","onMouseEnter","onMouseLeave","prevIndex","prevValue","newTransformWidth","faChevronLeft","faSearchPlus","onS","image","Modal","document","body","classList","add","remove","event","target","currentTarget","id","subtitle","App","rootNode","setSubMenuStatuses","modalStatuses","useSelector","modals","closest","appSlice","testString","test","action","payload","store","configureStore","reducer","app","appReducer","modalsReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a3789b6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Footer.scss';\n\nconst Footer = (props) => {\n  return <footer className={`footer ${props.className ? props.className : ''}`}>Footer</footer>;\n};\n\nFooter.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Footer;\n","import React from 'react';\nimport './SubMenu.scss';\nimport PropTypes from 'prop-types';\nimport NavigaionItem from '../NavigationItem/NavigaionItem';\n\nconst SubMenu = ({ className, submenuItems }) => {\n  return (\n    <ul className={`submenu ${className ? className : ''}`}>\n      {submenuItems?.map((item) => (\n        <NavigaionItem\n          className={'submenu__item'}\n          link={item.link}\n          title={item.title}\n          key={`${item.link}${item.title}`}\n        />\n      ))}\n    </ul>\n  );\n};\n\nSubMenu.propTypes = {\n  className: PropTypes.string,\n  submenuItems: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default SubMenu;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SubMenu from '../SubMenu/SubMenu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\n\nconst NavigaionItem = ({\n  className,\n  link,\n  title,\n  submenu,\n  submenuClassName,\n  index,\n  isSubmenuActive,\n  clickHandler,\n}) => {\n  const isSubMenuPresent = submenu?.length > 0;\n\n  if (isSubMenuPresent) {\n    const clickOnItem = (e) => {\n      e.preventDefault();\n      clickHandler(index);\n    };\n\n    return (\n      <li className={`${className ? className : ''}`} onClick={clickOnItem}>\n        <a href={link}>\n          {title}\n          <FontAwesomeIcon icon={faChevronDown} size=\"xs\" />\n        </a>\n        <SubMenu\n          submenuItems={submenu}\n          className={`${submenuClassName} ${isSubmenuActive ? 'navigation__sub-menu--active' : ''}`}\n        />\n      </li>\n    );\n  } else {\n    return (\n      <li className={`${className ? className : ''}`}>\n        <a href={link}>{title}</a>\n      </li>\n    );\n  }\n};\n\nNavigaionItem.propTypes = {\n  className: PropTypes.string,\n  link: PropTypes.string,\n  title: PropTypes.string,\n  submenu: PropTypes.arrayOf(PropTypes.object),\n  submenuClassName: PropTypes.string,\n  index: PropTypes.number,\n  isSubmenuActive: PropTypes.bool,\n};\n\nexport default NavigaionItem;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport NavigaionItem from '../NavigationItem/NavigaionItem';\nimport './HeaderNavigation.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst HeaderNavigation = (props) => {\n  const [isMobileMenuVisible, setIsMobileMenuVisible] = useState(false);\n\n  const openMobileMenuHandler = () => {\n    setIsMobileMenuVisible(true);\n  };\n\n  const closeMobileMenuHandler = () => {\n    setIsMobileMenuVisible(false);\n  };\n\n  const clickHandler = (index) => {\n    props.changeSubMenuStatuses((prevState) => {\n      let newStatuses;\n      newStatuses = prevState.map((item, itemIndex) => {\n        return itemIndex === index ? true : false;\n      });\n      if (prevState[index]) {\n        newStatuses = prevState.map((item) => (item = false));\n      }\n      return newStatuses;\n    });\n  };\n\n  return (\n    <div\n      className={`navigation ${props.className ? props.className : ''} ${\n        isMobileMenuVisible ? 'navigation--active' : ''\n      }`}>\n      <button\n        className=\"navigation__mobile-menu-button navigation__mobile-menu-button_open\"\n        onClick={openMobileMenuHandler}>\n        <FontAwesomeIcon icon={faBars} size=\"lg\" />\n      </button>\n      <nav className=\"navigation__wrapper\">\n        <button\n          className=\"navigation__mobile-menu-button navigation__mobile-menu-button_close\"\n          onClick={closeMobileMenuHandler}>\n          <FontAwesomeIcon icon={faTimes} size=\"lg\" />\n        </button>\n        <ul className=\"navigation__list\">\n          {props.navItems?.map((item, index) => (\n            <NavigaionItem\n              className={`navigation__item\n              ${item.submenu ? 'navigation__item--dropdown' : ''}\n              ${props.subMenuStatuses[index] ? 'navigation__item--active' : ''}`}\n              isSubmenuActive={props.subMenuStatuses[index]}\n              link={item.link}\n              title={item.title}\n              key={`${item.link}${item.title}`}\n              submenu={item.submenu}\n              submenuClassName={'navigation__sub-menu'}\n              index={index}\n              clickHandler={clickHandler}\n            />\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nHeaderNavigation.propTypes = {\n  className: PropTypes.string,\n  navItems: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default HeaderNavigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst HeaderLogo = (props) => {\n  return (\n    <a href={props.link ? props.link : '/'} className={`logo ${props.className ? props.className : ''}`}>\n      <img src={props.src} alt={props.alt ? props.alt : 'Company logo'} />\n    </a>\n  );\n};\n\nHeaderLogo.propTypes = {\n  className: PropTypes.string,\n  link: PropTypes.string,\n  src: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default HeaderLogo;\n","import React from 'react';\nimport './HeaderLinks.scss';\nimport PropTypes from 'prop-types';\n\nconst HeaderLinks = (props) => {\n  return (\n    <div className={`header-links ${props.className ? props.className : ''}`}>\n      <ul className=\"header-links__list\">\n        {props.links?.map((linkItem) => (\n          <li className=\"header-links__item\" key={`${linkItem.link}${linkItem.title}`}>\n            <a href={linkItem.link}>{linkItem.title}</a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nHeaderLinks.propTypes = {\n  className: PropTypes.string,\n  links: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default HeaderLinks;\n","import React from 'react';\nimport './HeaderContacts.scss';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope, faPhone } from '@fortawesome/free-solid-svg-icons';\n\nconst HeaderContacts = (props) => {\n  return (\n    <div className={`header-contacts ${props.className ? props.className : ''}`}>\n      <ul className=\"header-contacts__list\">\n        {props.contacts?.map((contact) => (\n          <li className=\"header-contacts__item\" key={`${contact.link}${contact.title}`}>\n            <a href={contact.link}>\n              {contact.link.includes('tel:') && <FontAwesomeIcon icon={faPhone} />}\n              {contact.link.includes('mailto:') && <FontAwesomeIcon icon={faEnvelope} />}\n              <span>{contact.title}</span>\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nHeaderContacts.propTypes = {\n  className: PropTypes.string,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default HeaderContacts;\n","import React from 'react';\nimport './SearchButton.scss';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nconst SearchButton = (props) => {\n  return (\n    <a href={props.link} className={`search-button ${props.className ? props.className : ''}`}>\n      <span>{props.title ? props.title : 'Search'}</span>\n      <FontAwesomeIcon icon={faSearch} />\n    </a>\n  );\n};\n\nSearchButton.propTypes = {\n  className: PropTypes.string,\n  link: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default SearchButton;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Header.scss';\nimport HeaderNavigation from './HeaderNavigation/HeaderNavigation';\nimport HeaderLogo from './HeaderLogo/HeaderLogo';\nimport HeaderLinks from './HeaderLinks/HeaderLinks';\nimport HeaderContacts from './HeaderContacts/HeaderContacts';\nimport SearchButton from './SearchButton/SearchButton';\n\nconst Header = (props) => {\n  const [navItems] = useState([\n    {\n      link: '#',\n      title: 'Sales',\n\n      submenu: [\n        {\n          link: '/sellers/link/',\n          title: 'Western Suburbs',\n        },\n        { link: '/sellers/link/', title: 'North Shore' },\n        { link: '/sellers/link/', title: 'South Shore' },\n        {\n          link: '/sellers/link/',\n          title: 'Cape Cod & Islands',\n        },\n        {\n          link: '/sellers/link/',\n          title: 'Off Market Listings',\n        },\n      ],\n    },\n    {\n      link: '#',\n      title: 'Rentals',\n\n      submenu: [\n        {\n          link: '/sellers/link/',\n          title: 'Western Suburbs',\n        },\n        { link: '/sellers/link/', title: 'North Shore' },\n        { link: '/sellers/link/', title: 'South Shore' },\n        {\n          link: '/sellers/link/',\n          title: 'Cape Cod & Islands',\n        },\n        {\n          link: '/sellers/link/',\n          title: 'Off Market Listings',\n        },\n      ],\n    },\n    { link: '/', title: 'Quick search' },\n    { link: '/', title: 'Neighborhoods' },\n    {\n      link: '/',\n      title: 'About',\n\n      submenu: [\n        { link: '/sellers/link/', title: 'Team' },\n        { link: '/sellers/link/', title: 'Contact' },\n      ],\n    },\n  ]);\n  const [logoInfo] = useState({\n    link: '/',\n    src: 'https://s3.amazonaws.com/files.usmre.com/8844/usm-logo-blue.svg',\n    alt: 'Logo',\n  });\n  const [headerLinks] = useState([\n    { title: 'My Favorites', link: '/listings/favorite/' },\n    { title: 'Contact', link: '/contact-us/' },\n    { title: 'Log In', link: '#' },\n    { title: 'Sign Up', link: '#' },\n  ]);\n  const [contacts] = useState([{ title: '132-132-1324', link: 'tel:1321321324' }]);\n  const navItemsNumber = navItems.length ? navItems.length : 0;\n  const subMenuStatuses = new Array(navItemsNumber).fill(false);\n\n  useEffect(() => {\n    props.changeSubMenuStatuses(subMenuStatuses);\n  }, []);\n\n  return (\n    <header className={`header ${props.className ? props.className : ''}`}>\n      <div className=\"container\">\n        <div className=\"header__part header__part--left\">\n          <HeaderNavigation\n            className=\"header__navigation\"\n            navItems={navItems}\n            subMenuStatuses={props.subMenuStatuses}\n            changeSubMenuStatuses={props.changeSubMenuStatuses}\n          />\n        </div>\n        <HeaderLogo className=\"header__logo\" {...logoInfo} />\n        <div className=\"header__part header__part--right\">\n          <HeaderLinks className=\"header__links\" links={headerLinks} />\n          <HeaderContacts className=\"header__contacts\" contacts={contacts} />\n          <SearchButton className=\"header__search-button\" link=\"/listings/\" title=\"Search\" />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  subMenuStatuses: PropTypes.array,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Button = (props) => {\n  return (\n    <button\n      onClick={props.onClick}\n      className={`btn ${props.isSecondary ? 'btn--secondary' : ''} ${\n        props.className ? props.className : ''\n      } `}>\n      <FontAwesomeIcon icon={props.icon} />\n      <span className=\"btn__text\">{props.text}</span>\n    </button>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.string,\n  icon: PropTypes.object,\n  isSecondary: PropTypes.bool,\n};\n\nexport default Button;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  isLoginModalVisible: false,\n  isContactModalVisible: false,\n};\n\nexport const modalsSlice = createSlice({\n  name: 'modals',\n  initialState,\n  reducers: {\n    closeModal: (state) => {\n      return (state = initialState);\n    },\n    openLoginModal: (state) => {\n      state.isLoginModalVisible = true;\n    },\n    openContactModal: (state) => {\n      state.isContactModalVisible = true;\n    },\n  },\n});\n\nexport const { closeModal, openLoginModal, openContactModal } = modalsSlice.actions;\n\nexport default modalsSlice.reducer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Toolbar.scss';\nimport Button from '../UI/Button/Button';\nimport { faEnvelope, faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { useDispatch } from 'react-redux';\nimport { openLoginModal, openContactModal } from '../Modal/ModalSlice';\n\nconst Toolbar = (props) => {\n  const dispatch = useDispatch();\n\n  const favoriteClickHandler = () => {\n    dispatch(openLoginModal());\n  };\n\n  const contactClickHandler = () => {\n    dispatch(openContactModal());\n  };\n\n  return (\n    <div className={`toolbar ${props.className ? props.className : ''}`}>\n      <div className=\"toolbar__item\">\n        <Button\n          onClick={favoriteClickHandler}\n          className=\"toolbar__btn toolbar__btn-favorite\"\n          text=\"Favorite\"\n          icon={faHeart}\n          isSecondary={true}\n        />\n      </div>\n      <div className=\"toolbar__item\">\n        <Button\n          onClick={contactClickHandler}\n          className=\"toolbar__btn toolbar__btn-contact\"\n          text=\"Contact\"\n          icon={faEnvelope}\n        />\n      </div>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './IconListItem.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst IconListItem = ({ className, icon, title, value }) => {\n  return (\n    <li className={`icon-list-item ${className ? className : ''}`}>\n      {icon && (\n        <div className=\"icon-list-item__icon\">\n          <FontAwesomeIcon icon={icon} size=\"2x\" />\n        </div>\n      )}\n      {title && <div className=\"icon-list-item__title\">{title}</div>}\n      {value && <div className=\"icon-list-item__value\">{value}</div>}\n    </li>\n  );\n};\n\nIconListItem.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  value: PropTypes.string,\n  icon: PropTypes.object,\n};\n\nexport default IconListItem;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './InfoCallout.scss';\nimport { faBath, faBed, faBorderAll, faRulerCombined } from '@fortawesome/free-solid-svg-icons';\nimport IconListItem from './IconListItem';\n\nconst InfoCallout = (props) => {\n  const [listingInfo] = useState({\n    price: '7,998,000',\n    beds: '7',\n    baths: '8',\n    acres: '0.5',\n    sqft: '7,450',\n    status: 'ACT',\n  });\n  const { price, beds, baths, acres, sqft, status } = listingInfo;\n\n  return (\n    <div className={`info-callout ${props.className ? props.className : ''} `}>\n      {price && <div className=\"info-callout__price\">${price}</div>}\n      <ul className=\"info-callout__icon-list icon-list\">\n        {beds && (\n          <IconListItem className=\"icon-list__item\" title=\"Beds\" value={beds} icon={faBed} />\n        )}\n        {baths && (\n          <IconListItem className=\"icon-list__item\" title=\"Baths\" value={baths} icon={faBath} />\n        )}\n        {acres && (\n          <IconListItem\n            className=\"icon-list__item\"\n            title=\"Acres\"\n            value={acres}\n            icon={faRulerCombined}\n          />\n        )}\n        {sqft && (\n          <IconListItem className=\"icon-list__item\" title=\"SqFt\" value={sqft} icon={faBorderAll} />\n        )}\n      </ul>\n      {status && (\n        <div className=\"info-callout__status\">\n          Status: <span>{status}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nInfoCallout.propTypes = { className: PropTypes.string };\n\nexport default InfoCallout;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './ListingTitle.scss';\n\nconst ListingTitle = (props) => {\n  const [titleProperties] = useState({\n    address: '59 High Street, Brookline Village',\n    town: 'Brookline',\n    state: 'MA',\n    zipCode: '02445',\n  });\n\n  return (\n    <h1 className={`listing-title ${props.className ? props.className : ''}`}>\n      {titleProperties.address && (\n        <span className=\"listing-title__address\">{titleProperties.address}</span>\n      )}\n      {titleProperties.town && (\n        <span className=\"listing-title__town\">{titleProperties.town}, </span>\n      )}\n      {titleProperties.state && (\n        <span className=\"listing-title__state\">{titleProperties.state} </span>\n      )}\n      {titleProperties.zipCode && (\n        <span className=\"listing-title__zipcode\">{titleProperties.zipCode} </span>\n      )}\n    </h1>\n  );\n};\n\nListingTitle.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default ListingTitle;\n","import React from 'react';\nimport './DescriptionCard.scss';\nimport PropTypes from 'prop-types';\n\nconst DescriptionCard = ({ className, title, description }) => {\n  return (\n    <div className={`description-card ${className ? className : ''}`}>\n      <div className=\"description-card__title\">{title}</div>\n      <div className=\"description-card__text\">{description}</div>\n    </div>\n  );\n};\n\nDescriptionCard.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default DescriptionCard;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DescriptionCard from '../UI/DescriptionCard/DescriptionCard';\n\nconst ListingDetail = (props) => {\n  const [title] = useState('Listing Description');\n  const [description] = useState(\n    \"Elevator possibilities. Additional space can be added with elevator. Once inside this compound you don't know you're in the city. Multiple gardens encasing the property are so dense you can't see beyond the trees. New Construction 2020. Perfection is the only word to describe this stunning property. Ideal for the urban family who wants a city lifestyle but demands an outdoor experience that is breathtaking. Pool capable. The rear terrace has a Wolf Grill,Sub-Zero and an ashlar stonewall that exudes quality. Heated garage has a 100 amp Tesla charging station,wifi,cameras & alarms. Second floor has a 600 sq foot heated Ipe private deck with 25 trees in custom cedar planters,cameras and wifi. Unlimited hyper luxury interior customizations with high-end features. Both Radiant & Hydro heat in 20 rooms,5 wolf ovens,3 Sub-Zeros,3 washers/dryers,2 dishwashers,all 4 utilities added,new sewer,2 inch water line,4 inch gas line,400 amps electric buried. Nothing compares in MA!!\"\n  );\n\n  return (\n    <div className={`listing-detail ${props.className ? props.className : ''}`}>\n      <DescriptionCard title={title} description={description} />\n    </div>\n  );\n};\n\nListingDetail.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default ListingDetail;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Tab.scss';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Tab = (props) => {\n  const [isActive, setIsActive] = useState(props.isActive || false);\n\n  const clickHandler = () => {\n    setIsActive((prevState) => !prevState);\n  };\n\n  return (\n    <div\n      className={`tab ${isActive ? 'tab--active' : ''} ${props.className ? props.className : ''}`}>\n      <button className=\"tab__header\" onClick={clickHandler}>\n        <div className=\"tab__title\">{props.title}</div>\n        <div className=\"tab__icon\">\n          <FontAwesomeIcon icon={faChevronRight} />\n        </div>\n      </button>\n      <div className=\"tab__content\">{props.children}</div>\n    </div>\n  );\n};\n\nTab.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  isActive: PropTypes.bool,\n};\n\nexport default Tab;\n","const tabsInfo = [\n  {\n    title: 'Property Details',\n    groupFields: [\n      {\n        subTitle: 'Basic information',\n        fields: [\n          { name: 'Property Name', value: 'Detached' },\n          { name: 'MLS Number', value: '72889712' },\n          { name: 'Acreage', value: '0.5' },\n          { name: 'Date Listed', value: '09/03/2021' },\n        ],\n      },\n      {\n        subTitle: 'Property',\n        fields: [\n          { name: 'Square Feet', value: '7,450' },\n          { name: 'Year Built', value: '2020' },\n          { name: 'Rooms', value: '22' },\n          { name: 'Parking Spaces', value: '6' },\n        ],\n      },\n      {\n        subTitle: 'Location',\n        fields: [\n          { name: 'Neighborhood', value: 'Brookline Village' },\n          { name: 'Town', value: 'Brookline' },\n          { name: 'County', value: 'Norfolk' },\n          { name: 'State', value: 'MA' },\n          { name: 'Zip', value: '02445' },\n        ],\n      },\n    ],\n  },\n  {\n    title: 'Interior Features',\n    groupFields: [\n      {\n        subTitle: 'Beds/Baths',\n        fields: [\n          { name: 'Bedrooms', value: '7' },\n          { name: 'Bathrooms', value: '8' },\n        ],\n      },\n      {\n        subTitle: 'Basement',\n        fields: [{ name: 'Basement', value: 'No' }],\n      },\n    ],\n  },\n  {\n    title: 'Exterior Features',\n    groupFields: [\n      {\n        subTitle: 'Features',\n        fields: [\n          { name: 'Parking Description', value: 'On Street Permit, Stone/Gravel' },\n          { name: 'Exterior', value: 'Clapboard' },\n        ],\n      },\n    ],\n  },\n  {\n    title: 'Utilities and Appliances',\n    groupFields: [\n      {\n        subTitle: 'Utilities and Appliances',\n        fields: [{ name: 'Cooling', value: 'Central Air, Wall AC' }],\n      },\n    ],\n  },\n  {\n    title: 'Other Details',\n    groupFields: [\n      {\n        subTitle: 'Finance',\n        fields: [{ name: 'Taxes', value: '$44,763' }],\n      },\n    ],\n  },\n];\n\nexport default tabsInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ListingTabCallout.scss';\n\nconst ListingTabCallout = (props) => {\n  return (\n    <div className={`listing-tab-callout ${props.className ? props.className : ''}`}>\n      <h3 className=\"listing-tab-callout__title\">{props.title}</h3>\n      <ul className=\"listing-tab-callout__list\">\n        {props.items?.map((item) => (\n          <li className=\"listing-tab-callout__item\" key={Math.random()}>\n            <span className=\"listing-tab-callout__item-title\">{item.name}:</span>\n            <span className=\"listing-tab-callout__item-value\">{item.value}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nListingTabCallout.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ListingTabCallout;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './ListingTabs.scss';\nimport Tab from '../UI/Tab/Tab';\nimport tabsInfoObj from './listingTabsObject';\nimport ListingTabCallout from './ListingTabCallout';\n\nconst ListingTabs = (props) => {\n  const [tabsInfo] = useState(tabsInfoObj);\n\n  console.log(tabsInfo);\n\n  return (\n    <div className={`listing-tabs ${props.className ? props.className : ''}`}>\n      {tabsInfo?.map((tab, i) => (\n        <Tab className=\"listing-tabs__item\" title={tab.title} isActive={i === 0 ? true : false}>\n          {tab?.groupFields.map((field, i) => (\n            <ListingTabCallout title={field.subTitle} items={field.fields} />\n          ))}\n        </Tab>\n      ))}\n    </div>\n  );\n};\n\nListingTabs.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default ListingTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Aside.scss';\nimport Toolbar from '../Toolbar/Toolbar';\nimport InfoCallout from '../InfoCallout/InfoCallout';\nimport ListingTitle from '../ListingTitle/ListingTitle';\nimport ListingDetail from '../ListingDetail/ListingDetail';\nimport ListingTabs from '../ListingTabs/ListingTabs';\n\nconst Aside = (props) => {\n  return (\n    <aside className={`aside ${props.className ? props.className : ''}`}>\n      <Toolbar className=\"aside__toolbar\" />\n      <ListingTitle className=\"aside__listing-title\" />\n      <InfoCallout className=\"aside__info-callout\" />\n      <ListingDetail className=\"aside__card\" />\n      <ListingTabs className=\"aside__card\" />\n    </aside>\n  );\n};\n\nAside.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Aside;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SliderItem = (props) => {\n  return (\n    <div\n      className={`slider__item ${\n        props.itemIndex === props.activeImageIndex ? 'slider__item--active' : ''\n      }`}\n      onClick={() => props.clickHandler && props.clickHandler(props.itemIndex)}\n      style={{ width: props.width }}>\n      <img src={`${props.src}${props.imageSize}.jpeg`} alt={props.alt} />\n    </div>\n  );\n};\n\nSliderItem.propTypes = {\n  itemIndex: PropTypes.number,\n  activeImageIndex: PropTypes.number,\n  src: PropTypes.string,\n  imageSize: PropTypes.string,\n  width: PropTypes.number,\n};\n\nexport default SliderItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SliderWrapper = (props) => {\n  return (\n    <div className=\"slider__wrapper-outer\">\n      <div\n        className=\"slider__wrapper\"\n        style={{\n          transform: `translateX(-${props.transformWidth}px)`,\n          width: props.mainWrapperWidth,\n        }}>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nSliderWrapper.propTypes = {\n  transformWidth: PropTypes.number,\n  mainWrapperWidth: PropTypes.number,\n};\n\nexport default SliderWrapper;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Slider.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faSearchPlus,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons';\nimport SliderItem from './SliderItem';\nimport SliderWrapper from './SliderWrapper';\n\nconst Slider = (props) => {\n  const [images] = useState([\n    { src: 'images/image-1', alt: 'Property image' },\n    { src: 'images/image-2', alt: 'Property image' },\n    { src: 'images/image-3', alt: 'Property image' },\n    { src: 'images/image-4', alt: 'Property image' },\n    { src: 'images/image-5', alt: 'Property image' },\n    { src: 'images/image-6', alt: 'Property image' },\n    { src: 'images/image-7', alt: 'Property image' },\n    { src: 'images/image-8', alt: 'Property image' },\n    { src: 'images/image-9', alt: 'Property image' },\n    { src: 'images/image-10', alt: 'Property image' },\n    { src: 'images/image-11', alt: 'Property image' },\n  ]);\n  const mobileBreakpoint = 768;\n\n  const thumbsOnDesktop = 7;\n  const thumbsOnMobile = 3;\n  const thumbsOnFullScreen = 10;\n  const [thumbsCount, setThumbsCount] = useState(thumbsOnDesktop);\n\n  const [imagesLength] = useState(images.length);\n\n  const [largeImageSize] = useState('-h=900w=1200');\n  const [smallImageSize] = useState('-h=480w=640');\n\n  const [activeImageIndex, setActiveImageIndex] = useState(0);\n  const [mainWrapperWidth, setMainWrapperWidth] = useState(0);\n  const [imageNodeWidth, setImageNodeWidth] = useState(0);\n  const [transformWidth, setTransformWidth] = useState(0);\n\n  const [isFullScreenButtonVisible, setIsFullScreenButtonVisible] = useState(false);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  const $largeWrapper = useRef(null);\n\n  const initSliderSizes = () => {\n    const nodeWidth = $largeWrapper.current.clientWidth;\n    setImageNodeWidth(nodeWidth);\n    setMainWrapperWidth(nodeWidth * imagesLength);\n    setTransformWidth(nodeWidth * activeImageIndex);\n    if (window.innerWidth < mobileBreakpoint) {\n      setThumbsCount(thumbsOnMobile);\n    } else if (!isFullScreen) {\n      setThumbsCount(thumbsOnDesktop);\n    }\n  };\n\n  useEffect(() => {\n    initSliderSizes();\n    window.addEventListener('resize', () => {\n      initSliderSizes();\n    });\n    return () => {\n      window.removeEventListener('resize', initSliderSizes);\n    };\n  }, [activeImageIndex]);\n\n  const nextClickHandler = () => {\n    setActiveImageIndex((prevIndex) => {\n      if (prevIndex >= imagesLength - 1) {\n        return 0;\n      }\n      return prevIndex + 1;\n    });\n    setTransformWidth((prevValue) => {\n      const newTransformWidth = prevValue + imageNodeWidth;\n      if (newTransformWidth >= mainWrapperWidth) {\n        return 0;\n      }\n      return newTransformWidth;\n    });\n  };\n\n  const prevClickHandler = () => {\n    setActiveImageIndex((prevIndex) => {\n      if (prevIndex <= 0) {\n        return imagesLength - 1;\n      }\n      return prevIndex - 1;\n    });\n    setTransformWidth((prevValue) => {\n      const newTransformWidth = prevValue - imageNodeWidth;\n      if (newTransformWidth < 0) {\n        return mainWrapperWidth - imageNodeWidth;\n      }\n      return newTransformWidth;\n    });\n  };\n\n  const clickOnThumbHandler = (index) => {\n    setActiveImageIndex(index);\n  };\n\n  const enableFullScreen = () => {\n    setIsFullScreen(true);\n    setThumbsCount(thumbsOnFullScreen);\n  };\n\n  const disableFullScreen = () => {\n    setIsFullScreen(false);\n    setThumbsCount(thumbsOnDesktop);\n  };\n\n  useEffect(() => {\n    initSliderSizes();\n  }, [isFullScreen]);\n\n  return (\n    <div\n      className={`slider ${isFullScreen ? 'slider--full-screen' : ''} ${\n        props.className ? props.className : ''\n      } `}\n      ref={$largeWrapper}\n      onMouseEnter={() => setIsFullScreenButtonVisible(true)}\n      onMouseLeave={() => setIsFullScreenButtonVisible(false)}>\n      <div className=\"slider__main\">\n        <div className=\"slider__buttons\">\n          <button onClick={prevClickHandler} className=\"slider__button slider__prev-button\">\n            <FontAwesomeIcon icon={faChevronLeft} size=\"4x\" />\n          </button>\n          <button onClick={nextClickHandler} className=\"slider__button slider__next-button\">\n            <FontAwesomeIcon icon={faChevronRight} size=\"4x\" />\n          </button>\n          <button\n            onClick={enableFullScreen}\n            className={`slider__button slider__full-screen-button ${\n              !isFullScreen && isFullScreenButtonVisible ? 'slider__full-screen-button--active' : ''\n            }`}>\n            <FontAwesomeIcon icon={faSearchPlus} size=\"2x\" />\n          </button>\n          {isFullScreen && (\n            <button\n              onClick={disableFullScreen}\n              className=\"slider__button slider__disable-full-screen-button\">\n              <FontAwesomeIcon icon={faTimes} size=\"3x\" />\n            </button>\n          )}\n        </div>\n        <SliderWrapper mainWrapperWidth={mainWrapperWidth} transformWidth={transformWidth} onS>\n          {images.map((image, index) => (\n            <SliderItem\n              src={image.src}\n              imageSize={largeImageSize}\n              width={imageNodeWidth}\n              itemIndex={index}\n              activeImageIndex={activeImageIndex}\n              key={Math.random()}\n            />\n          ))}\n        </SliderWrapper>\n      </div>\n      <div className=\"slider__thumbs\">\n        <SliderWrapper\n          mainWrapperWidth={mainWrapperWidth / thumbsCount}\n          transformWidth={\n            activeImageIndex < imagesLength - thumbsCount\n              ? transformWidth / thumbsCount\n              : mainWrapperWidth / thumbsCount - imageNodeWidth\n          }>\n          {images.map((image, index) => (\n            <SliderItem\n              src={image.src}\n              imageSize={smallImageSize}\n              width={imageNodeWidth / thumbsCount}\n              itemIndex={index}\n              activeImageIndex={activeImageIndex}\n              key={Math.random()}\n              clickHandler={clickOnThumbHandler}\n            />\n          ))}\n        </SliderWrapper>\n      </div>\n    </div>\n  );\n};\n\nSlider.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Slider;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './Modal.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from './ModalSlice';\nimport { disableScroll, enableScroll } from '../../helpers/helpers';\n\nconst Modal = (props) => {\n  const dispatch = useDispatch();\n\n  const closeModalHandler = (event) => {\n    dispatch(closeModal());\n  };\n\n  const closeModalOnOverlay = (event) => {\n    if (event.target === event.currentTarget) {\n      dispatch(closeModal());\n    }\n  };\n\n  // Disabling scroll on modal open\n  useEffect(() => {\n    if (props.isActive) {\n      disableScroll();\n    } else {\n      enableScroll();\n    }\n  }, [props.isActive]);\n\n  return (\n    <div\n      className={`overlay ${props.isActive ? 'overlay--active' : ''}`}\n      onClick={closeModalOnOverlay}\n      id={props.id}>\n      <div\n        className={`modal\n        ${props.children ? 'modal--with-content' : ''}\n        `}>\n        <header className=\"modal__header\">\n          <button onClick={closeModalHandler} className=\"modal__close\">\n            <FontAwesomeIcon icon={faTimes} size=\"2x\" />\n          </button>\n          <div className=\"modal__title\">{props.title}</div>\n          {props.subtitle && <div className=\"modal__sub-title\">{props.subtitle}</div>}\n        </header>\n        {props.children && <div className=\"modal__content\">{props.children}</div>}\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  id: PropTypes.string,\n  isActive: PropTypes.bool,\n};\n\nexport default Modal;\n","export const disableScroll = () => {\n  document.body.classList.add('disable-scroll');\n};\n\nexport const enableScroll = () => {\n  document.body.classList.remove('disable-scroll');\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useRef, useState } from 'react';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport './App.scss';\nimport Aside from './components/Aside/Aside';\nimport Slider from './components/Slider/Slider';\nimport Modal from './components/Modal/Modal';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n  // Navigation variables\n  const rootNode = useRef(null);\n  const navigationSelecor = '.navigation__item';\n  const [subMenuStatuses, setSubMenuStatuses] = useState([]);\n  // Modals variables\n  const modalStatuses = useSelector((state) => state.modals);\n\n  // Navigaition click handler\n  useEffect(() => {\n    const onClick = (e) => {\n      const clickedNavigationItem = e.target.closest(navigationSelecor);\n      if (!clickedNavigationItem) {\n        setSubMenuStatuses((prevState) => {\n          return prevState.map((item) => (item = false));\n        });\n      }\n    };\n    document.addEventListener('click', onClick);\n    return () => document.removeEventListener('click', onClick);\n  }, []);\n\n  return (\n    <div className=\"wrapper\" id=\"App\" ref={rootNode}>\n      <div className=\"content \">\n        <Header changeSubMenuStatuses={setSubMenuStatuses} subMenuStatuses={subMenuStatuses} />\n        <div className=\"page-wrapper\">\n          <div className=\"container\">\n            <main className=\"main page-wrapper__main\">\n              <Slider />\n            </main>\n            <Aside className=\"page-wrapper__aside\" />\n          </div>\n        </div>\n      </div>\n      <Footer />\n      <Modal\n        id=\"favorite-modal\"\n        isActive={modalStatuses.isLoginModalVisible}\n        title=\"Log in or create an account to save this listing to your favorites\"\n        subtitle=\"Log in to your account to save your favorite listings for later.\">\n        <p>Here will be register form</p>\n      </Modal>\n      <Modal id=\"contact-modal\" isActive={modalStatuses.isContactModalVisible} title=\"Contact Us\">\n        <p>Here will be contact form</p>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  testString: 'test',\n};\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    test: (state, action) => {\n      state.testString = action.payload;\n    },\n  },\n});\n\nexport const { test } = appSlice.actions;\n\nexport default appSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport appReducer from './appSlice';\nimport modalsReducer from '../components/Modal/ModalSlice';\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n    modals: modalsReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}